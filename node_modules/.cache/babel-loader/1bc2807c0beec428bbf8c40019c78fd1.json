{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/USER/Desktop/Nlw06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/USER/Desktop/Nlw06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useParams,useHistory}from'react-router-dom';import logoImg from\"../assets/images/logo.svg\";import deleteImg from\"../assets/images/delete.svg\";import checkImg from\"../assets/images/check.svg\";import answerImg from\"../assets/images/answer.svg\";import{Button}from'../Components/Button';import{Question}from'../Components/Question';import{RoomCode}from'../Components/RoomCode';import{useRoom}from'../hooks/useRoom';import'../styles/rooms.scss';import{database}from'../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function AdminRoom(){// const { user } = useAuth()\nvar history=useHistory();var params=useParams();var roomId=params.id;var _useRoom=useRoom(roomId),title=_useRoom.title,questions=_useRoom.questions;function handleEndRoom(){return _handleEndRoom.apply(this,arguments);}function _handleEndRoom(){_handleEndRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return database.ref(\"rooms/\".concat(roomId)).update({endedAt:new Date()});case 2:history.push('/');case 3:case\"end\":return _context.stop();}}},_callee);}));return _handleEndRoom.apply(this,arguments);}function handleDeleteQuestion(_x){return _handleDeleteQuestion.apply(this,arguments);}function _handleDeleteQuestion(){_handleDeleteQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questionId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.confirm('Tem certeza que deseja excluir essa pergunta?')){_context2.next=3;break;}_context2.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).remove();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleDeleteQuestion.apply(this,arguments);}function handleCheckQuestionAsAnswered(_x2){return _handleCheckQuestionAsAnswered.apply(this,arguments);}function _handleCheckQuestionAsAnswered(){_handleCheckQuestionAsAnswered=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(questionId){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isAnswered:true});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _handleCheckQuestionAsAnswered.apply(this,arguments);}function handleHighlightQuestion(_x3){return _handleHighlightQuestion.apply(this,arguments);}function _handleHighlightQuestion(){_handleHighlightQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(questionId){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isHighlighted:true});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return _handleHighlightQuestion.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{id:\"page-room\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"Letmeask\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RoomCode,{code:roomId}),/*#__PURE__*/_jsx(Button,{isOutlined:true,onClick:handleEndRoom,children:\"Encerrar sala\"})]})]})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sala \",title]}),questions.length>0&&/*#__PURE__*/_jsxs(\"span\",{children:[questions.length,\" pergunta(s)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-list\",children:questions.map(function(question){return/*#__PURE__*/_jsxs(Question,{content:question.content,author:question.author,isAnswered:question.isAnswered,isHighlighted:question.isHighlighted,children:[!question.isAnswered&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleCheckQuestionAsAnswered(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:checkImg,alt:\"Marcar pergunta como respondida\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleHighlightQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:answerImg,alt:\"Dar destaque \\xE0 pergunta\"})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleDeleteQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:deleteImg,alt:\"Remover pergunta\"})})]},question.id);})})]})]});}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Nlw06/src/pages/AdminRoom.tsx"],"names":["useParams","useHistory","Button","Question","RoomCode","useRoom","database","AdminRoom","history","params","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["import { useParams, useHistory } from 'react-router-dom'\n\nimport logoImg from '../assets/images/logo.svg';\nimport deleteImg from '../assets/images/delete.svg';\nimport checkImg from '../assets/images/check.svg';\nimport answerImg from '../assets/images/answer.svg';\n\nimport { Button } from '../Components/Button';\nimport { Question } from '../Components/Question';\nimport { RoomCode } from '../Components/RoomCode';\nimport { useRoom } from '../hooks/useRoom';\n\nimport '../styles/rooms.scss'\nimport { database } from '../services/firebase';\n\ntype RoomParams = {\n  id: string\n}\n\nexport function AdminRoom() {\n  // const { user } = useAuth()\n  const history = useHistory()\n  const params = useParams<RoomParams>()\n  const roomId = params.id;\n  \n  const { title, questions } = useRoom(roomId)\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date(),\n    })\n\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId: string) {\n    if (window.confirm('Tem certeza que deseja excluir essa pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove()\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId: string) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({ \n      isAnswered: true,\n    })\n  }\n\n  async function handleHighlightQuestion(questionId: string) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({ \n      isHighlighted: true,\n    })\n  }\n\n  return(\n    <div id=\"page-room\">\n      <header>\n        <div className=\"content\">\n          <img src={logoImg} alt=\"Letmeask\" />\n          <div>\n            <RoomCode code={roomId} />\n            <Button isOutlined onClick={handleEndRoom}>Encerrar sala</Button>\n          </div>\n        </div>\n      </header>\n\n      <main>\n        <div className=\"room-title\">\n          <h1>Sala {title}</h1>\n          { questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\n        </div>\n\n        <div className=\"question-list\">\n        {questions.map(question => {\n          return <Question \n            key={question.id}\n            content={question.content} \n            author={question.author} \n            isAnswered={question.isAnswered}\n            isHighlighted={question.isHighlighted}\n            >\n              { !question.isAnswered && (\n                <>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleCheckQuestionAsAnswered(question.id)}\n                  >\n                    <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleHighlightQuestion(question.id)}\n                  >\n                    <img src={answerImg} alt=\"Dar destaque à pergunta\" />\n                  </button>\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => handleDeleteQuestion(question.id)}\n              >\n                <img src={deleteImg} alt=\"Remover pergunta\" />\n              </button>\n            </Question>\n        })}\n        </div>\n      </main>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
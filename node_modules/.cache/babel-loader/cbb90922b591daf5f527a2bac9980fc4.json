{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/USER/Desktop/Nlw06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/USER/Desktop/Nlw06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/USER/Desktop/Nlw06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{createContext}from\"react\";import{auth,firebase}from\"../services/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext({});export function AuthContextProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(user){if(user){var displayName=user.displayName,photoURL=user.photoURL,uid=user.uid;if(!displayName||!photoURL){throw new Error('Missing information from Google Account');}setUser({id:uid,name:displayName,avatar:photoURL});}});return function(){unsubscribe();};},[]);function signInWithGoogle(){return _signInWithGoogle.apply(this,arguments);}function _signInWithGoogle(){_signInWithGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,_result$user,displayName,photoURL,uid;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new firebase.auth.GoogleAuthProvider();_context.next=3;return auth.signInWithPopup(provider);case 3:result=_context.sent;if(!result.user){_context.next=9;break;}_result$user=result.user,displayName=_result$user.displayName,photoURL=_result$user.photoURL,uid=_result$user.uid;if(!(!displayName||!photoURL)){_context.next=8;break;}throw new Error('Missing information from Google Account');case 8:setUser({id:uid,name:displayName,avatar:photoURL});case 9:case\"end\":return _context.stop();}}},_callee);}));return _signInWithGoogle.apply(this,arguments);}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user:user,signInWithGoogle:signInWithGoogle},children:props.children});}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Nlw06/src/contexts/AuthContext.tsx"],"names":["useEffect","useState","createContext","auth","firebase","AuthContext","AuthContextProvider","props","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","result","children"],"mappings":"mbAAA,OAAoBA,SAApB,CAA+BC,QAA/B,KAA+C,OAA/C,CACA,OAASC,aAAT,KAA8B,OAA9B,CACA,OAASC,IAAT,CAAeC,QAAf,KAA+B,sBAA/B,C,2CAiBA,MAAO,IAAMC,CAAAA,WAAW,cAAGH,aAAa,CAAC,EAAD,CAAjC,CAEP,MAAO,SAASI,CAAAA,mBAAT,CAA6BC,KAA7B,CAA8D,eAE3CN,QAAQ,EAFmC,wCAE5DO,IAF4D,eAEtDC,OAFsD,eAInET,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,WAAW,CAAGP,IAAI,CAACQ,kBAAL,CAAwB,SAAAH,IAAI,CAAI,CAClD,GAAIA,IAAJ,CAAU,IACAI,CAAAA,WADA,CAC+BJ,IAD/B,CACAI,WADA,CACaC,QADb,CAC+BL,IAD/B,CACaK,QADb,CACuBC,GADvB,CAC+BN,IAD/B,CACuBM,GADvB,CAGV,GAAG,CAACF,WAAD,EAAgB,CAACC,QAApB,CAA8B,CAC5B,KAAM,IAAIE,CAAAA,KAAJ,CAAU,yCAAV,CAAN,CACD,CAEDN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAKC,CACF,CAdmB,CAApB,CAgBA,MAAO,WAAM,CACXH,WAAW,GACZ,CAFD,CAGD,CApBQ,CAoBN,EApBM,CAAT,CAJmE,QA0BpDS,CAAAA,gBA1BoD,0JA0BnE,6LACQC,QADR,CACmB,GAAIhB,CAAAA,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EADnB,uBAGuBlB,CAAAA,IAAI,CAACmB,eAAL,CAAqBF,QAArB,CAHvB,QAGQG,MAHR,mBAKKA,MAAM,CAACf,IALZ,sCAM2Ce,MAAM,CAACf,IANlD,CAMYI,WANZ,cAMYA,WANZ,CAMyBC,QANzB,cAMyBA,QANzB,CAMmCC,GANnC,cAMmCA,GANnC,MAQO,CAACF,WAAD,EAAgB,CAACC,QARxB,+BASY,IAAIE,CAAAA,KAAJ,CAAU,yCAAV,CATZ,QAYIN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAZJ,sDA1BmE,mDA8CnE,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEL,IAAI,CAAJA,IAAF,CAAQW,gBAAgB,CAAhBA,gBAAR,CAA7B,UACGZ,KAAK,CAACiB,QADT,EADF,CAKD","sourcesContent":["import { ReactNode, useEffect, useState } from \"react\"\nimport { createContext } from \"react\"\nimport { auth, firebase } from \"../services/firebase\"\n\ntype User = {\n  id: string\n  name: string\n  avatar: string\n}\n\ntype AuthContextType = {\n  user: User | undefined;\n  signInWithGoogle: () => Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType)\n\nexport function AuthContextProvider(props: AuthContextProviderProps) {\n\n  const [user, setUser] = useState<User>()\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const { displayName, photoURL, uid } = user\n\n      if(!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account')\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n      }\n    })\n\n    return () => {\n      unsubscribe()\n    }\n  }, [])\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider()\n\n    const result = await auth.signInWithPopup(provider)\n    \n    if(result.user) {\n      const { displayName, photoURL, uid } = result.user\n\n      if(!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account')\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      })\n    }\n  }\n\n  return (\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}